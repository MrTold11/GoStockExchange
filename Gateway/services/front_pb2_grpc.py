# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import base_pb2 as base__pb2
import front_pb2 as front__pb2


class FrontServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStocksList = channel.unary_unary(
                '/front.FrontService/GetStocksList',
                request_serializer=base__pb2.Empty.SerializeToString,
                response_deserializer=front__pb2.StocksList.FromString,
                )
        self.GetCurrentPrice = channel.unary_unary(
                '/front.FrontService/GetCurrentPrice',
                request_serializer=base__pb2.ISIN.SerializeToString,
                response_deserializer=base__pb2.StockPrice.FromString,
                )
        self.GetOpeningPrice = channel.unary_unary(
                '/front.FrontService/GetOpeningPrice',
                request_serializer=base__pb2.ISIN.SerializeToString,
                response_deserializer=base__pb2.StockPrice.FromString,
                )
        self.GetPortfolio = channel.unary_unary(
                '/front.FrontService/GetPortfolio',
                request_serializer=front__pb2.Token.SerializeToString,
                response_deserializer=front__pb2.Portfolio.FromString,
                )
        self.PlaceOrder = channel.unary_unary(
                '/front.FrontService/PlaceOrder',
                request_serializer=base__pb2.Order.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )
        self.CancelOrder = channel.unary_unary(
                '/front.FrontService/CancelOrder',
                request_serializer=base__pb2.CancelOrderRequest.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )


class FrontServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetStocksList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentPrice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOpeningPrice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPortfolio(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlaceOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FrontServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStocksList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStocksList,
                    request_deserializer=base__pb2.Empty.FromString,
                    response_serializer=front__pb2.StocksList.SerializeToString,
            ),
            'GetCurrentPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentPrice,
                    request_deserializer=base__pb2.ISIN.FromString,
                    response_serializer=base__pb2.StockPrice.SerializeToString,
            ),
            'GetOpeningPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOpeningPrice,
                    request_deserializer=base__pb2.ISIN.FromString,
                    response_serializer=base__pb2.StockPrice.SerializeToString,
            ),
            'GetPortfolio': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPortfolio,
                    request_deserializer=front__pb2.Token.FromString,
                    response_serializer=front__pb2.Portfolio.SerializeToString,
            ),
            'PlaceOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.PlaceOrder,
                    request_deserializer=base__pb2.Order.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
            'CancelOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelOrder,
                    request_deserializer=base__pb2.CancelOrderRequest.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'front.FrontService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FrontService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetStocksList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/front.FrontService/GetStocksList',
            base__pb2.Empty.SerializeToString,
            front__pb2.StocksList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCurrentPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/front.FrontService/GetCurrentPrice',
            base__pb2.ISIN.SerializeToString,
            base__pb2.StockPrice.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOpeningPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/front.FrontService/GetOpeningPrice',
            base__pb2.ISIN.SerializeToString,
            base__pb2.StockPrice.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPortfolio(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/front.FrontService/GetPortfolio',
            front__pb2.Token.SerializeToString,
            front__pb2.Portfolio.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PlaceOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/front.FrontService/PlaceOrder',
            base__pb2.Order.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/front.FrontService/CancelOrder',
            base__pb2.CancelOrderRequest.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
