Index: src/main/java/com/zeromb/gostock/activity/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/activity/LoginActivity.java b/src/main/java/com/zeromb/gostock/display/activity/LoginActivity.java
rename from src/main/java/com/zeromb/gostock/activity/LoginActivity.java
rename to src/main/java/com/zeromb/gostock/display/activity/LoginActivity.java
--- a/src/main/java/com/zeromb/gostock/activity/LoginActivity.java	(revision 8aeac7aad9062fa94c4bd89c805412a5c4873557)
+++ b/src/main/java/com/zeromb/gostock/display/activity/LoginActivity.java	(date 1673013218444)
@@ -1,8 +1,7 @@
-package com.zeromb.gostock.activity;
+package com.zeromb.gostock.display.activity;
 
 import ru.congas.core.application.Bundle;
 import ru.congas.core.application.GameActivity;
-import ru.congas.core.application.PageActivity;
 import ru.congas.core.input.keys.Key;
 import ru.congas.core.input.keys.KeyPressed;
 import ru.congas.core.output.modifier.Color;
@@ -48,7 +47,7 @@
         if (event.getDefinedKey() == Key.ENTER) {
             Bundle args = new Bundle(getClass());
             args.addExtra("access-token", "test_token");
-            openActivity(ExchangeActivity.class, args, true);
+            openActivity(PortfolioActivity.class, args, false);
             return true;
         }
         return false;
Index: src/main/java/com/zeromb/gostock/obj/Stock.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.zeromb.gostock.obj;\r\n\r\n/**\r\n * @author Mr_Told\r\n */\r\npublic class Stock implements Comparable<Stock> {\r\n\r\n    final String name;\r\n    double currentMarketPrice, openMarketPrice;\r\n\r\n    int amount;\r\n    double balancePrice;\r\n\r\n    public Stock(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public double getCurrentMarketPrice() {\r\n        return currentMarketPrice;\r\n    }\r\n\r\n    public void setCurrentMarketPrice(double currentMarketPrice) {\r\n        this.currentMarketPrice = currentMarketPrice;\r\n    }\r\n\r\n    public int getAmount() {\r\n        return amount;\r\n    }\r\n\r\n    public void setAmount(int amount) {\r\n        this.amount = amount;\r\n    }\r\n\r\n    public double getBalancePrice() {\r\n        return balancePrice;\r\n    }\r\n\r\n    public void setBalancePrice(double balancePrice) {\r\n        this.balancePrice = balancePrice;\r\n    }\r\n\r\n    public double getOpenMarketPrice() {\r\n        return openMarketPrice;\r\n    }\r\n\r\n    public void setOpenMarketPrice(double openMarketPrice) {\r\n        this.openMarketPrice = openMarketPrice;\r\n    }\r\n\r\n    public double getDeltaTotal() {\r\n        return (currentMarketPrice - balancePrice) * amount;\r\n    }\r\n\r\n    public double getDeltaTotalPercents() {\r\n        if (balancePrice == 0) return 0;\r\n\r\n        return (currentMarketPrice - balancePrice) / balancePrice * 100;\r\n    }\r\n\r\n    public double getDeltaToday() {\r\n        return (currentMarketPrice - openMarketPrice) * amount;\r\n    }\r\n\r\n    public double getDeltaTodayPercents() {\r\n        if (openMarketPrice == 0) return 0;\r\n\r\n        return (currentMarketPrice - openMarketPrice) / openMarketPrice * 100;\r\n    }\r\n\r\n    @Override\r\n    public int compareTo(Stock o) {\r\n        return getName().compareToIgnoreCase(o.getName());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/obj/Stock.java b/src/main/java/com/zeromb/gostock/obj/Stock.java
--- a/src/main/java/com/zeromb/gostock/obj/Stock.java	(revision 8aeac7aad9062fa94c4bd89c805412a5c4873557)
+++ b/src/main/java/com/zeromb/gostock/obj/Stock.java	(date 1673013218325)
@@ -5,50 +5,65 @@
  */
 public class Stock implements Comparable<Stock> {
 
-    final String name;
+    final String name, ticker, ISIN, description;
     double currentMarketPrice, openMarketPrice;
 
     int amount;
     double balancePrice;
 
-    public Stock(String name) {
+    public Stock(String name, String ticker, String isin, String description) {
         this.name = name;
+        this.ticker = ticker;
+        ISIN = isin;
+        this.description = description;
     }
 
     public String getName() {
         return name;
     }
 
+    public String getTicker() {
+        return ticker;
+    }
+
+    public String getISIN() {
+        return ISIN;
+    }
+
     public double getCurrentMarketPrice() {
         return currentMarketPrice;
     }
 
-    public void setCurrentMarketPrice(double currentMarketPrice) {
+    public Stock setCurrentMarketPrice(double currentMarketPrice) {
         this.currentMarketPrice = currentMarketPrice;
+        return this;
     }
 
     public int getAmount() {
         return amount;
     }
 
-    public void setAmount(int amount) {
+    public Stock setAmount(int amount) {
         this.amount = amount;
+        return this;
     }
 
     public double getBalancePrice() {
         return balancePrice;
     }
 
-    public void setBalancePrice(double balancePrice) {
+    public Stock setBalancePrice(double balancePrice) {
         this.balancePrice = balancePrice;
+        return this;
     }
 
     public double getOpenMarketPrice() {
         return openMarketPrice;
     }
 
-    public void setOpenMarketPrice(double openMarketPrice) {
+    public Stock setOpenMarketPrice(double openMarketPrice) {
         this.openMarketPrice = openMarketPrice;
+        return this;
     }
 
     public double getDeltaTotal() {
@@ -61,10 +76,14 @@
         return (currentMarketPrice - balancePrice) / balancePrice * 100;
     }
 
-    public double getDeltaToday() {
+    public double getDeltaTodayOwned() {
         return (currentMarketPrice - openMarketPrice) * amount;
     }
 
+    public double getDeltaTodayOne() {
+        return currentMarketPrice - openMarketPrice;
+    }
+
     public double getDeltaTodayPercents() {
         if (openMarketPrice == 0) return 0;
 
@@ -73,6 +92,6 @@
 
     @Override
     public int compareTo(Stock o) {
-        return getName().compareToIgnoreCase(o.getName());
+        return getTicker().compareToIgnoreCase(o.getTicker());
     }
 }
Index: src/main/java/com/zeromb/gostock/activity/ExchangeActivity.java
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/activity/ExchangeActivity.java b/src/main/java/com/zeromb/gostock/activity/ExchangeActivity.java
deleted file mode 100644
--- a/src/main/java/com/zeromb/gostock/activity/ExchangeActivity.java	(revision 8aeac7aad9062fa94c4bd89c805412a5c4873557)
+++ /dev/null	(revision 8aeac7aad9062fa94c4bd89c805412a5c4873557)
@@ -1,43 +0,0 @@
-package com.zeromb.gostock.activity;
-
-import ru.congas.core.application.Bundle;
-import ru.congas.core.application.PageActivity;
-import ru.congas.core.input.keys.KeyPressed;
-import ru.congas.core.output.modifier.Color;
-import ru.congas.core.output.modifier.Style;
-import ru.congas.core.output.widgets.TextView;
-import ru.congas.core.output.widgets.properties.Gravity;
-
-/**
- * @author Mr_Told
- */
-public class ExchangeActivity extends PageActivity {
-
-    TextView balanceView = new TextView("Активы: ", null);
-    TextView balanceValue = new TextView("300.000 GTB",
-            new Style().setForeground(Color.GREEN));
-
-    @Override
-    protected void onCreate(Bundle args) {
-        super.onCreate(args);
-
-        addWidget(balanceView).pos().setGravity(Gravity.leftTop)
-                .setOffsetY(1);
-        addWidget(balanceValue).pos().setGravity(Gravity.leftTop)
-                .setOffsetX(balanceView.getText().length() +
-                        balanceView.pos().getXCoordinate(0, getCanvas().getWidth()))
-                .setOffsetY(1);
-
-        render();
-    }
-
-    @Override
-    public boolean handle(KeyPressed event) {
-        return false;
-    }
-
-    @Override
-    protected void render() {
-        super.render();
-    }
-}
Index: src/main/java/com/zeromb/gostock/display/activity/tab/ActivityTab.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/display/activity/tab/ActivityTab.java b/src/main/java/com/zeromb/gostock/display/activity/tab/ActivityTab.java
new file mode 100644
--- /dev/null	(date 1673013218567)
+++ b/src/main/java/com/zeromb/gostock/display/activity/tab/ActivityTab.java	(date 1673013218567)
@@ -0,0 +1,32 @@
+package com.zeromb.gostock.display.activity.tab;
+
+import ru.congas.core.output.modifier.Style;
+import ru.congas.core.output.widgets.TextView;
+
+/**
+ * @author Mr_Told
+ */
+public class ActivityTab {
+
+    final Class<? extends ExchangeTabActivity> clazz, leftClazz, rightClazz;
+    final int color;
+    final String name;
+
+    final TextView textView;
+
+    public ActivityTab(Class<? extends ExchangeTabActivity> clazz, Class<? extends ExchangeTabActivity> leftClazz,
+                       Class<? extends ExchangeTabActivity> rightClazz, int color, String name) {
+        this.clazz = clazz;
+        this.leftClazz = leftClazz;
+        this.rightClazz = rightClazz;
+        this.color = color;
+        this.name = name;
+
+        this.textView = new TextView(name, new Style().setBackground(color));
+    }
+
+    public TextView getTextView() {
+        return textView;
+    }
+
+}
Index: src/main/java/com/zeromb/gostock/display/view/line/BalanceLineView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/display/view/line/BalanceLineView.java b/src/main/java/com/zeromb/gostock/display/view/line/BalanceLineView.java
new file mode 100644
--- /dev/null	(date 1673013218581)
+++ b/src/main/java/com/zeromb/gostock/display/view/line/BalanceLineView.java	(date 1673013218581)
@@ -0,0 +1,58 @@
+package com.zeromb.gostock.display.view.line;
+
+import com.zeromb.gostock.format.TextViewFormatter;
+import com.zeromb.gostock.obj.Portfolio;
+import ru.congas.core.output.modifier.Attribute;
+import ru.congas.core.output.modifier.Style;
+import ru.congas.core.output.widgets.TextView;
+
+/**
+ * @author Mr_Told
+ */
+public class BalanceLineView extends LineView {
+
+    TextViewFormatter formatter = new TextViewFormatter();
+
+    Portfolio portfolio;
+    boolean dayDelta;
+
+    TextView nameView = new TextView("Total:", null);
+    TextView priceValue = new TextView("xxx,xx GTB", null);
+    TextView priceValueSep = new TextView("|", null);
+    TextView priceDeltaVal = new TextView("+ 0 GTB", null);
+    TextView priceDeltaSep = new TextView("/", null);
+    TextView priceDeltaPer = new TextView("0,00 %", null);
+    TextView priceDeltaTime = new TextView("за все время", null);
+
+    public BalanceLineView(Portfolio portfolio) {
+        super(null);
+        this.portfolio = portfolio;
+
+        addView(nameView).addView(priceValue).addView(priceValueSep)
+                .addView(priceDeltaVal).addView(priceDeltaSep)
+                .addView(priceDeltaPer).addView(priceDeltaTime);
+
+        nameView.setStyle(new Style().addAttribute(Attribute.INTENSITY_BOLD));
+
+        update();
+    }
+
+    public void update() {
+        formatter.formatValue(priceValue, portfolio.getTotalBalance(),
+                dayDelta && portfolio.getDeltaToday() >= 0
+                || !dayDelta && portfolio.getDeltaTotal() >= 0);
+        formatter.formatDelta(priceDeltaVal,
+                dayDelta ? portfolio.getDeltaToday() : portfolio.getDeltaTotal());
+        formatter.formatPercents(priceDeltaPer,
+                dayDelta ? portfolio.getDeltaTodayPercents() : portfolio.getDeltaTotalPercents());
+        priceDeltaTime.setText(dayDelta ? "за сегодня" : "за все время");
+    }
+
+    public void setDayDelta(boolean dayDelta) {
+        this.dayDelta = dayDelta;
+    }
+
+    public boolean isDayDelta() {
+        return dayDelta;
+    }
+}
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1673013218426)
+++ b/.idea/uiDesigner.xml	(date 1673013218426)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/com/zeromb/gostock/format/TextViewFormatter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/format/TextViewFormatter.java b/src/main/java/com/zeromb/gostock/format/TextViewFormatter.java
new file mode 100644
--- /dev/null	(date 1673013218406)
+++ b/src/main/java/com/zeromb/gostock/format/TextViewFormatter.java	(date 1673013218406)
@@ -0,0 +1,59 @@
+package com.zeromb.gostock.format;
+
+import ru.congas.core.output.modifier.Color;
+import ru.congas.core.output.modifier.Style;
+import ru.congas.core.output.widgets.TextView;
+
+/**
+ * @author Mr_Told
+ */
+public class TextViewFormatter {
+
+    ValuesFormatter formatter = new ValuesFormatter();
+
+    public TextViewFormatter setTextViewGR(TextView view, String text, boolean green) {
+        view.setText(text);
+
+        if (view.getStyle() == null)
+            view.setStyle(new Style());
+
+        view.getStyle().setForeground(green ? Color.GREEN : Color.RED);
+        return this;
+    }
+
+    public TextViewFormatter setTextViewGR(TextView view, String text) {
+        view.setText(text);
+
+        if (view.getStyle() == null)
+            view.setStyle(new Style());
+
+        view.getStyle().setForeground(Color.WHITE);
+        return this;
+    }
+
+    public TextViewFormatter formatValue(TextView view, double amount, boolean green) {
+        setTextViewGR(view, formatter.formatValue(amount), green);
+        return this;
+    }
+
+    public TextViewFormatter formatValue(TextView view, double amount) {
+        setTextViewGR(view, formatter.formatValue(amount));
+        return this;
+    }
+
+    public TextViewFormatter formatDelta(TextView view, double amount) {
+        setTextViewGR(view, formatter.formatDelta(amount), amount >= 0);
+        return this;
+    }
+
+    public TextViewFormatter formatPercents(TextView view, double amount) {
+        setTextViewGR(view, formatter.formatPercent(amount), amount >= 0);
+        return this;
+    }
+
+    public TextViewFormatter formatAmount(TextView view, int amount) {
+        setTextViewGR(view, formatter.formatAmount(amount));
+        return this;
+    }
+
+}
Index: src/main/java/com/zeromb/gostock/display/activity/PortfolioActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/display/activity/PortfolioActivity.java b/src/main/java/com/zeromb/gostock/display/activity/PortfolioActivity.java
new file mode 100644
--- /dev/null	(date 1673015796296)
+++ b/src/main/java/com/zeromb/gostock/display/activity/PortfolioActivity.java	(date 1673015796296)
@@ -0,0 +1,61 @@
+package com.zeromb.gostock.display.activity;
+
+import com.zeromb.gostock.display.activity.tab.ExchangeTabActivity;
+import com.zeromb.gostock.display.view.group.StockView;
+import com.zeromb.gostock.display.view.line.BalanceLineView;
+import com.zeromb.gostock.display.view.group.PortfolioView;
+import com.zeromb.gostock.display.view.line.stock.StockLineView;
+import ru.congas.core.application.Bundle;
+import ru.congas.core.input.keys.KeyPressed;
+import ru.congas.core.output.widgets.properties.Gravity;
+
+/**
+ * @author Mr_Told
+ */
+public class PortfolioActivity extends ExchangeTabActivity {
+
+    protected static boolean dayDelta = true;
+
+    BalanceLineView totalView = new BalanceLineView(exchange.getPortfolio());
+    PortfolioView portfolioView = new PortfolioView(exchange.getPortfolio());
+
+    @Override
+    protected void onCreate(Bundle args) {
+        super.onCreate(args);
+
+        hintView.setText("Press TAB to switch delta mode, use ARROWS to navigate, ENTER to open stock");
+
+        addWidget(totalView).pos().setGravity(Gravity.leftTop)
+                .setOffset(2, 3);
+        addWidget(portfolioView).pos().setOffset(4, 5);
+
+        setDayDelta(dayDelta);
+        render();
+    }
+
+    @Override
+    public boolean handle(KeyPressed event) {
+        switch (event.getDefinedKey()) {
+            case TAB:
+                setDayDelta(!dayDelta);
+                render();
+                return true;
+        }
+        return super.handle(event);
+    }
+
+    @Override
+    protected StockView<? extends StockLineView> getStockView() {
+        return portfolioView;
+    }
+
+    public void setDayDelta(boolean dayDelta) {
+        PortfolioActivity.dayDelta = dayDelta;
+        totalView.setDayDelta(dayDelta);
+        portfolioView.setDayDelta(dayDelta);
+        totalView.update();
+        portfolioView.update();
+        totalView.markDirty();
+    }
+
+}
Index: src/main/java/com/zeromb/gostock/format/ValuesFormatter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/format/ValuesFormatter.java b/src/main/java/com/zeromb/gostock/format/ValuesFormatter.java
new file mode 100644
--- /dev/null	(date 1673013218496)
+++ b/src/main/java/com/zeromb/gostock/format/ValuesFormatter.java	(date 1673013218496)
@@ -0,0 +1,56 @@
+package com.zeromb.gostock.format;
+
+import java.text.DecimalFormat;
+import java.text.DecimalFormatSymbols;
+
+/**
+ * @author Mr_Told
+ */
+public class ValuesFormatter {
+
+    DecimalFormat percentFormat, priceFormat;
+
+    String currencySuffix, amountSuffix;
+
+    public ValuesFormatter() {
+        setCurrency("GTB");
+        setAmountString("pcs");
+
+        DecimalFormatSymbols symbols = new DecimalFormatSymbols();
+
+        symbols.setDecimalSeparator(',');
+        symbols.setGroupingSeparator('.');
+        percentFormat = new DecimalFormat("0.00", symbols);
+
+        symbols.setGroupingSeparator(' ');
+        priceFormat = new DecimalFormat("###,###,##0.##", symbols);
+    }
+
+    public ValuesFormatter setCurrency(String s) {
+        this.currencySuffix = " " + s;
+        return this;
+    }
+
+    public ValuesFormatter setAmountString(String s) {
+        this.amountSuffix = " " + s;
+        return this;
+    }
+
+    public String formatPercent(double value) {
+        return percentFormat.format(Math.abs(value)) + "%";
+    }
+
+    public String formatDelta(double delta) {
+        return (delta < 0 ? "- " : "+ ") +
+                priceFormat.format(Math.abs(delta)) + currencySuffix;
+    }
+
+    public String formatValue(double value) {
+        return priceFormat.format(value) + currencySuffix;
+    }
+
+    public String formatAmount(int amount) {
+        return amount + amountSuffix;
+    }
+
+}
Index: src/main/java/com/zeromb/gostock/display/activity/StockActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/display/activity/StockActivity.java b/src/main/java/com/zeromb/gostock/display/activity/StockActivity.java
new file mode 100644
--- /dev/null	(date 1673016523970)
+++ b/src/main/java/com/zeromb/gostock/display/activity/StockActivity.java	(date 1673016523970)
@@ -0,0 +1,36 @@
+package com.zeromb.gostock.display.activity;
+
+import com.zeromb.gostock.display.view.line.LineView;
+import com.zeromb.gostock.display.view.line.stock.StockLineView;
+import com.zeromb.gostock.obj.Stock;
+import ru.congas.core.application.Bundle;
+import ru.congas.core.application.PageActivity;
+
+/**
+ * @author Mr_Told
+ */
+public class StockActivity extends PageActivity {
+
+    Stock stock;
+
+    StockLineView lineView;
+
+    @Override
+    protected void onCreate(Bundle args) {
+        super.onCreate(args);
+
+        if (args != null)
+            stock = (Stock) args.getObject("stock", Stock.class, null);
+
+        if (stock == null)
+            throw new RuntimeException("Stock activity open without correct arguments");
+
+        lineView = new StockLineView(stock);
+    }
+
+    @Override
+    protected void render() {
+        super.render();
+    }
+
+}
Index: src/main/java/com/zeromb/gostock/display/view/group/MarketView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/display/view/group/MarketView.java b/src/main/java/com/zeromb/gostock/display/view/group/MarketView.java
new file mode 100644
--- /dev/null	(date 1673013218347)
+++ b/src/main/java/com/zeromb/gostock/display/view/group/MarketView.java	(date 1673013218347)
@@ -0,0 +1,16 @@
+package com.zeromb.gostock.display.view.group;
+
+import com.zeromb.gostock.display.view.line.stock.StockLineView;
+import com.zeromb.gostock.obj.StockExchange;
+
+/**
+ * @author Mr_Told
+ */
+public class MarketView extends StockView<StockLineView> {
+
+    public MarketView(StockExchange exchange) {
+        super(exchange.getStocks(), StockLineView::new);
+        update();
+    }
+
+}
Index: src/main/java/com/zeromb/gostock/display/activity/StockListActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/display/activity/StockListActivity.java b/src/main/java/com/zeromb/gostock/display/activity/StockListActivity.java
new file mode 100644
--- /dev/null	(date 1673015752896)
+++ b/src/main/java/com/zeromb/gostock/display/activity/StockListActivity.java	(date 1673015752896)
@@ -0,0 +1,37 @@
+package com.zeromb.gostock.display.activity;
+
+import com.zeromb.gostock.display.activity.tab.ExchangeTabActivity;
+import com.zeromb.gostock.display.view.group.MarketView;
+import com.zeromb.gostock.display.view.group.StockView;
+import com.zeromb.gostock.display.view.line.stock.StockLineView;
+import ru.congas.core.application.Bundle;
+import ru.congas.core.input.keys.KeyPressed;
+import ru.congas.core.output.modifier.Color;
+import ru.congas.core.output.widgets.properties.Gravity;
+
+import java.util.TreeSet;
+
+/**
+ * @author Mr_Told
+ */
+public class StockListActivity extends ExchangeTabActivity {
+
+    MarketView marketView = new MarketView(exchange);
+
+    @Override
+    protected void onCreate(Bundle args) {
+        super.onCreate(args);
+
+        hintView.setText("Use ARROWS to navigate, ENTER to open stock");
+
+        addWidget(marketView).pos().setOffset(4, 3);
+
+        render();
+    }
+
+    @Override
+    protected StockView<? extends StockLineView> getStockView() {
+        return marketView;
+    }
+
+}
Index: src/main/java/com/zeromb/gostock/GoStockCLI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.zeromb.gostock;\r\n\r\nimport com.zeromb.gostock.activity.LoginActivity;\r\nimport org.apache.logging.log4j.LogManager;\r\nimport ru.congas.core.CongasCore;\r\n\r\n/**\r\n * @author Mr_Told\r\n */\r\npublic class GoStockCLI extends CongasCore {\r\n\r\n    public static void main(String[] args) throws Exception {\r\n        logger = LogManager.getLogger(GoStockCLI.class);\r\n        CongasCore.debug = false;\r\n        new GoStockCLI();\r\n    }\r\n\r\n    public GoStockCLI() throws Exception {\r\n        super();\r\n        setTitle(\"GoTo Stock Exchange CLI\");\r\n        openActivity(LoginActivity.class, null, null);\r\n    }\r\n\r\n    @Override\r\n    protected void terminalNotSupported() {\r\n        Runtime.getRuntime().removeShutdownHook(shutdownThread);\r\n        //todo dumb terminal\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/GoStockCLI.java b/src/main/java/com/zeromb/gostock/GoStockCLI.java
--- a/src/main/java/com/zeromb/gostock/GoStockCLI.java	(revision 8aeac7aad9062fa94c4bd89c805412a5c4873557)
+++ b/src/main/java/com/zeromb/gostock/GoStockCLI.java	(date 1673013218525)
@@ -1,6 +1,6 @@
 package com.zeromb.gostock;
 
-import com.zeromb.gostock.activity.LoginActivity;
+import com.zeromb.gostock.display.activity.LoginActivity;
 import org.apache.logging.log4j.LogManager;
 import ru.congas.core.CongasCore;
 
Index: src/main/java/com/zeromb/gostock/obj/GotoCoin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.zeromb.gostock.obj;\r\n\r\n/**\r\n * @author Mr_Told\r\n */\r\npublic class GotoCoin {\r\n\r\n    double amount;\r\n\r\n    public double getAmount() {\r\n        return amount;\r\n    }\r\n\r\n    public void setAmount(double amount) {\r\n        this.amount = amount;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/obj/GotoCoin.java b/src/main/java/com/zeromb/gostock/obj/GotoCoin.java
--- a/src/main/java/com/zeromb/gostock/obj/GotoCoin.java	(revision 8aeac7aad9062fa94c4bd89c805412a5c4873557)
+++ b/src/main/java/com/zeromb/gostock/obj/GotoCoin.java	(date 1673013218542)
@@ -11,7 +11,8 @@
         return amount;
     }
 
-    public void setAmount(double amount) {
+    public GotoCoin setAmount(double amount) {
         this.amount = amount;
+        return this;
     }
 }
Index: src/main/java/com/zeromb/gostock/obj/StockExchange.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.zeromb.gostock.obj;\r\n\r\nimport java.util.*;\r\n\r\n/**\r\n * @author Mr_Told\r\n */\r\npublic class StockExchange {\r\n\r\n\r\n    Map<String, Stock> stockMap = new TreeMap<>();\r\n\r\n    Portfolio portfolio = new Portfolio();\r\n\r\n    public Set<Stock> findStocks(String query) {\r\n        Set<Stock> result = new TreeSet<>();\r\n        for (Stock s : stockMap.values()) {\r\n            if (s.getName().contains(query))\r\n                result.add(s);\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/obj/StockExchange.java b/src/main/java/com/zeromb/gostock/obj/StockExchange.java
--- a/src/main/java/com/zeromb/gostock/obj/StockExchange.java	(revision 8aeac7aad9062fa94c4bd89c805412a5c4873557)
+++ b/src/main/java/com/zeromb/gostock/obj/StockExchange.java	(date 1673013218300)
@@ -7,11 +7,37 @@
  */
 public class StockExchange {
 
-
     Map<String, Stock> stockMap = new TreeMap<>();
 
     Portfolio portfolio = new Portfolio();
 
+    public StockExchange() {
+        addStock(new Stock("Аэрофлот", "AFLT", "RU0009062285", "")
+                .setCurrentMarketPrice(542.71)
+                .setOpenMarketPrice(528.58)
+                .setBalancePrice(457.33)
+                .setAmount(80));
+        addStock(new Stock("Tesla", "TSLA", "US88160R1014", "")
+                .setCurrentMarketPrice(420.69)
+                .setOpenMarketPrice(451.87)
+                .setBalancePrice(846.87)
+                .setAmount(5));
+        addStock(new Stock("Virgin Galactic Holdings", "SPCE", "US92766K1060", "")
+                .setCurrentMarketPrice(3.4)
+                .setOpenMarketPrice(3.48)
+                .setBalancePrice(29.87)
+                .setAmount(19));
+        addStock(new Stock("Яндекс", "YNDX", "NL0009805522", "")
+                .setCurrentMarketPrice(1846.8)
+                .setOpenMarketPrice(1874.2));
+
+        portfolio.updateStocks(getStocks());
+    }
+
+    public void addStock(Stock stock) {
+        stockMap.put(stock.getName(), stock);
+    }
+
     public Set<Stock> findStocks(String query) {
         Set<Stock> result = new TreeSet<>();
         for (Stock s : stockMap.values()) {
@@ -21,4 +47,11 @@
         return result;
     }
 
+    public Collection<Stock> getStocks() {
+        return stockMap.values();
+    }
+
+    public Portfolio getPortfolio() {
+        return portfolio;
+    }
 }
Index: src/main/java/com/zeromb/gostock/obj/Portfolio.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.zeromb.gostock.obj;\r\n\r\nimport java.util.*;\r\n\r\n/**\r\n * @author Mr_Told\r\n */\r\npublic class Portfolio {\r\n\r\n    Set<Stock> stocks = new TreeSet<>();\r\n    GotoCoin coins = new GotoCoin();\r\n\r\n    public Set<Stock> getStocks() {\r\n        stocks.removeIf(s -> s.getAmount() < 1);\r\n\r\n        return stocks;\r\n    }\r\n\r\n    public void updateStocks(Set<Stock> all) {\r\n        for (Stock s : all) {\r\n            if (s.getAmount() > 0)\r\n                stocks.add(s);\r\n        }\r\n    }\r\n\r\n    public void setStocks(Set<Stock> stocks) {\r\n        this.stocks = stocks;\r\n    }\r\n\r\n    public GotoCoin getCoins() {\r\n        return coins;\r\n    }\r\n\r\n    public void setCoins(GotoCoin coins) {\r\n        this.coins = coins;\r\n    }\r\n\r\n    public double getDeltaTotal() {\r\n        double delta = 0;\r\n        for (Stock stock : stocks)\r\n            delta += stock.getDeltaTotal();\r\n        return delta;\r\n    }\r\n\r\n    public double getDeltaTotalPercents() {\r\n        double deltaTotal = Math.abs(getDeltaTotal());\r\n        if (deltaTotal == 0) return 0;\r\n\r\n        return (deltaTotal < 0 ? -1 : 1) *\r\n                deltaTotal * 100 / (deltaTotal + coins.amount);\r\n    }\r\n\r\n    public double getDeltaToday() {\r\n        double delta = 0;\r\n        for (Stock stock : stocks)\r\n            delta += stock.getDeltaToday();\r\n        return delta;\r\n    }\r\n\r\n    public double getDeltaTodayPercents() {\r\n        double deltaToday = Math.abs(getDeltaToday());\r\n        if (deltaToday == 0) return 0;\r\n\r\n        return deltaToday < 0 ? -1 : 1 *\r\n                deltaToday * 100 / (deltaToday + coins.amount);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/obj/Portfolio.java b/src/main/java/com/zeromb/gostock/obj/Portfolio.java
--- a/src/main/java/com/zeromb/gostock/obj/Portfolio.java	(revision 8aeac7aad9062fa94c4bd89c805412a5c4873557)
+++ b/src/main/java/com/zeromb/gostock/obj/Portfolio.java	(date 1673013218552)
@@ -16,23 +16,24 @@
         return stocks;
     }
 
-    public void updateStocks(Set<Stock> all) {
+    public void updateStocks(Collection<Stock> all) {
         for (Stock s : all) {
             if (s.getAmount() > 0)
                 stocks.add(s);
         }
     }
 
-    public void setStocks(Set<Stock> stocks) {
-        this.stocks = stocks;
-    }
-
     public GotoCoin getCoins() {
         return coins;
     }
 
-    public void setCoins(GotoCoin coins) {
-        this.coins = coins;
+    public double getTotalBalance() {
+        double balance = coins.getAmount();
+
+        for (Stock s : stocks)
+            balance += s.getAmount() * s.getCurrentMarketPrice();
+
+        return balance;
     }
 
     public double getDeltaTotal() {
@@ -53,7 +54,7 @@
     public double getDeltaToday() {
         double delta = 0;
         for (Stock stock : stocks)
-            delta += stock.getDeltaToday();
+            delta += stock.getDeltaTodayOwned();
         return delta;
     }
 
Index: src/main/java/com/zeromb/gostock/display/view/group/StockView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/display/view/group/StockView.java b/src/main/java/com/zeromb/gostock/display/view/group/StockView.java
new file mode 100644
--- /dev/null	(date 1673014465885)
+++ b/src/main/java/com/zeromb/gostock/display/view/group/StockView.java	(date 1673014465885)
@@ -0,0 +1,61 @@
+package com.zeromb.gostock.display.view.group;
+
+import com.zeromb.gostock.display.view.line.stock.StockLineView;
+import com.zeromb.gostock.obj.Stock;
+import ru.congas.core.output.canvas.Canvas;
+import ru.congas.core.output.widgets.Widget;
+
+import java.util.Collection;
+import java.util.Set;
+import java.util.TreeSet;
+import java.util.function.Function;
+
+/**
+ * @author Mr_Told
+ */
+public class StockView<T extends StockLineView> extends Widget {
+
+    Set<T> stockViews = new TreeSet<>();
+
+    public StockView(Collection<Stock> stocks, Function<Stock, T> creator) {
+        stocks.forEach(
+                s -> stockViews.add(creator.apply(s)));
+    }
+
+    @Override
+    public void render(Canvas canvas) {
+        renderStocks(canvas, 0);
+    }
+
+    public void renderStocks(Canvas canvas, int offsetY) {
+        for (T view : stockViews) {
+            view.pos().setOffset(pos().getOffsetX(), pos().getOffsetY() + offsetY);
+            view.render(canvas);
+            offsetY++;
+        }
+    }
+
+    public void update() {
+        int maxPriceLen = 0;
+        int maxDeltaLen = 0;
+        for (T view : stockViews) {
+            view.update();
+            view.markDirty();
+
+            maxPriceLen = Math.max(maxPriceLen, view.getPriceSize());
+            maxDeltaLen = Math.max(maxDeltaLen, view.getDeltaSize());
+        }
+
+        for (T view : stockViews) {
+            int deltaPrice = maxPriceLen - view.getPriceSize();
+            int deltaDelta = maxDeltaLen - view.getDeltaSize();
+            view.addPriceSpace(deltaPrice);
+            view.addDeltaSpace(deltaDelta);
+        }
+    }
+
+    public Set<T> getStockViews() {
+        return stockViews;
+    }
+
+}
Index: src/main/java/com/zeromb/gostock/display/view/line/stock/StockLineView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/display/view/line/stock/StockLineView.java b/src/main/java/com/zeromb/gostock/display/view/line/stock/StockLineView.java
new file mode 100644
--- /dev/null	(date 1673015947229)
+++ b/src/main/java/com/zeromb/gostock/display/view/line/stock/StockLineView.java	(date 1673015947229)
@@ -0,0 +1,79 @@
+package com.zeromb.gostock.display.view.line.stock;
+
+import com.zeromb.gostock.display.view.line.LineView;
+import com.zeromb.gostock.format.TextViewFormatter;
+import com.zeromb.gostock.obj.Stock;
+import ru.congas.core.output.modifier.Attribute;
+import ru.congas.core.output.modifier.Color;
+import ru.congas.core.output.modifier.Style;
+import ru.congas.core.output.widgets.TextView;
+
+/**
+ * @author Mr_Told
+ */
+public class StockLineView extends LineView implements Comparable<StockLineView> {
+
+    TextViewFormatter formatter = new TextViewFormatter();
+
+    Stock stock;
+
+    TextView tickerView = new TextView("NAME", null);
+    TextView priceValue = new TextView("???,?? GTB", null);
+    TextView priceValueSep = new TextView("|", null);
+    TextView priceDeltaVal = new TextView("+ ? GTB", null);
+    TextView priceDeltaSep = new TextView("/", null);
+    TextView priceDeltaPer = new TextView("?,?? %", null);
+
+    public StockLineView(Stock stock) {
+        super(null);
+        this.stock = stock;
+
+        addView(tickerView).addView(priceValue).addView(priceValueSep)
+                .addView(priceDeltaVal).addView(priceDeltaSep).addView(priceDeltaPer);
+        tickerView.setText(stock.getTicker());
+        tickerView.setStyle(new Style()
+                .addAttribute(Attribute.INTENSITY_BOLD)
+                .setBackground(Color.GRAY));
+    }
+
+    public Style getTickerStyle() {
+        return tickerView.getStyle();
+    }
+
+    public void update() {
+        tickerView.getStyle().setForeground(stock.getAmount() > 0 ?
+                Color.GOLD : Color.WHITE);
+        formatter.formatValue(priceValue, stock.getCurrentMarketPrice())
+                .formatDelta(priceDeltaVal, stock.getDeltaTodayOne())
+                .formatPercents(priceDeltaPer, stock.getDeltaTodayPercents());
+    }
+
+    public int getPriceSize() {
+        return priceValue.getText().length();
+    }
+
+    public void addPriceSpace(int spaces) {
+        if (spaces < 1) return;
+
+        priceValue.setText(" ".repeat(spaces) + priceValue.getText());
+    }
+
+    public int getDeltaSize() {
+        return priceDeltaVal.getText().length();
+    }
+
+    public void addDeltaSpace(int spaces) {
+        if (spaces < 1) return;
+
+        priceDeltaVal.setText(" ".repeat(spaces) + priceDeltaVal.getText());
+    }
+
+    public Stock getStock() {
+        return stock;
+    }
+
+    @Override
+    public int compareTo(StockLineView o) {
+        return stock.compareTo(o.stock);
+    }
+}
Index: src/main/java/com/zeromb/gostock/display/view/line/stock/OwnedStockLineView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/display/view/line/stock/OwnedStockLineView.java b/src/main/java/com/zeromb/gostock/display/view/line/stock/OwnedStockLineView.java
new file mode 100644
--- /dev/null	(date 1673013218669)
+++ b/src/main/java/com/zeromb/gostock/display/view/line/stock/OwnedStockLineView.java	(date 1673013218669)
@@ -0,0 +1,36 @@
+package com.zeromb.gostock.display.view.line.stock;
+
+import com.zeromb.gostock.obj.Stock;
+import ru.congas.core.output.widgets.TextView;
+
+/**
+ * @author Mr_Told
+ */
+public class OwnedStockLineView extends StockLineView {
+
+    TextView amountSep = new TextView("|", null);
+    TextView amount = new TextView("?? pcs", null);
+    boolean dayDelta;
+
+    public OwnedStockLineView(Stock stock) {
+        super(stock);
+        addView(amountSep).addView(amount);
+    }
+
+    @Override
+    public void update() {
+        formatter.formatValue(priceValue, stock.getCurrentMarketPrice() * stock.getAmount(),
+                dayDelta && stock.getDeltaTodayOwned() >= 0
+                        || !dayDelta && stock.getDeltaTotal() >= 0)
+                .formatDelta(priceDeltaVal,
+                dayDelta ? stock.getDeltaTodayOwned() : stock.getDeltaTotal())
+                .formatPercents(priceDeltaPer,
+                dayDelta ? stock.getDeltaTodayPercents() : stock.getDeltaTotalPercents())
+                .formatAmount(amount, stock.getAmount());
+    }
+
+    public void setDayDelta(boolean dayDelta) {
+        this.dayDelta = dayDelta;
+    }
+
+}
Index: src/main/java/com/zeromb/gostock/display/view/line/CoinsLineView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/display/view/line/CoinsLineView.java b/src/main/java/com/zeromb/gostock/display/view/line/CoinsLineView.java
new file mode 100644
--- /dev/null	(date 1673013218618)
+++ b/src/main/java/com/zeromb/gostock/display/view/line/CoinsLineView.java	(date 1673013218618)
@@ -0,0 +1,36 @@
+package com.zeromb.gostock.display.view.line;
+
+import com.zeromb.gostock.format.TextViewFormatter;
+import com.zeromb.gostock.obj.GotoCoin;
+import ru.congas.core.output.modifier.Attribute;
+import ru.congas.core.output.modifier.Style;
+import ru.congas.core.output.widgets.TextView;
+
+/**
+ * @author Mr_Told
+ */
+public class CoinsLineView extends LineView {
+
+    TextViewFormatter formatter = new TextViewFormatter();
+
+    GotoCoin coin;
+
+    TextView nameView = new TextView("Balance:", null);
+    TextView priceValue = new TextView("xxx,xx GTB", null);
+
+    public CoinsLineView(GotoCoin coin) {
+        super(null);
+        this.coin = coin;
+
+        addView(nameView).addView(priceValue);
+
+        nameView.setStyle(new Style().addAttribute(Attribute.INTENSITY_BOLD));
+
+        update();
+    }
+
+    public void update() {
+        formatter.formatValue(priceValue, coin.getAmount());
+    }
+
+}
Index: src/main/java/com/zeromb/gostock/display/activity/tab/ExchangeTabActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/display/activity/tab/ExchangeTabActivity.java b/src/main/java/com/zeromb/gostock/display/activity/tab/ExchangeTabActivity.java
new file mode 100644
--- /dev/null	(date 1673016096380)
+++ b/src/main/java/com/zeromb/gostock/display/activity/tab/ExchangeTabActivity.java	(date 1673016096380)
@@ -0,0 +1,177 @@
+package com.zeromb.gostock.display.activity.tab;
+
+import com.zeromb.gostock.display.activity.PortfolioActivity;
+import com.zeromb.gostock.display.activity.StockActivity;
+import com.zeromb.gostock.display.activity.StockListActivity;
+import com.zeromb.gostock.display.view.group.StockView;
+import com.zeromb.gostock.display.view.line.LineView;
+import com.zeromb.gostock.display.view.line.stock.StockLineView;
+import com.zeromb.gostock.obj.Stock;
+import com.zeromb.gostock.obj.StockExchange;
+import ru.congas.core.application.Bundle;
+import ru.congas.core.application.PageActivity;
+import ru.congas.core.input.keys.KeyPressed;
+import ru.congas.core.output.modifier.Color;
+import ru.congas.core.output.modifier.Style;
+import ru.congas.core.output.widgets.TextView;
+import ru.congas.core.output.widgets.properties.Gravity;
+import ru.congas.core.output.widgets.properties.WidgetSizeType;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * @author Mr_Told
+ */
+public abstract class ExchangeTabActivity extends PageActivity {
+
+    protected static final StockExchange exchange = new StockExchange();
+
+    private static final Map<Class<? extends ExchangeTabActivity>, ActivityTab> tabs = new HashMap<>();
+
+    private static final LineView tabsView = new LineView(null);
+
+    static {
+        addTab(new ActivityTab(PortfolioActivity.class, null, StockListActivity.class, Color.BLUE, "Portfolio"));
+        addTab(new ActivityTab(StockListActivity.class, PortfolioActivity.class, null, Color.CORAL, "Market"));
+
+        tabsView.pos().setGravity(Gravity.centerBottom);
+        tabsView.setSeparator("   ");
+
+        for (ActivityTab tab = tabs.values().stream()
+                .filter(t -> t.leftClazz == null)
+                .findAny().orElseThrow();
+             tab != null;
+             tab = tabs.get(tab.rightClazz)
+        ) {
+            tabsView.addView(tab.getTextView());
+        }
+
+        exchange.getPortfolio().getCoins().setAmount(300000);
+    }
+
+    private static void addTab(ActivityTab tab) {
+        tabs.put(tab.clazz, tab);
+    }
+
+    protected TextView exchangeView, hintView;
+    int pointer = 0;
+    ActivityTab current;
+
+    @Override
+    protected void onCreate(Bundle args) {
+        super.onCreate(args);
+
+        current = tabs.get(getClass());
+        if (current == null)
+            throw new RuntimeException("Exchange Tab wasn't found for: " + getClass().getName());
+
+        exchangeView = new TextView("GOTO EXCHANGE", new Style());
+        exchangeView.setBackgroundStyle(exchangeView.getStyle()
+                .setBackground(current.color));
+
+        hintView = new TextView("This is a hint, probably needs to be filled",
+                new Style().setBackground(Color.GRAY));
+
+        addWidget(exchangeView).pos()
+                .setGravity(Gravity.centerTop)
+                .setOffsetY(1)
+                .setWidgetHeight(3)
+                .setWidthType(WidgetSizeType.match_parent);
+
+        addWidget(hintView).pos()
+                .setGravity(Gravity.leftBottom)
+                .setOffset(1, -2);
+
+        addWidget(tabsView);
+
+        updatePointer();
+        render();
+    }
+
+    @Override
+    public boolean handle(KeyPressed event) {
+        switch (event.getDefinedKey()) {
+            case LEFT:
+                if (current.leftClazz != null)
+                    openActivity(current.leftClazz, null, true);
+                return true;
+            case RIGHT:
+                if (current.rightClazz != null)
+                    openActivity(current.rightClazz, null, true);
+                return true;
+            case UP:
+                if (pointer == 0)
+                    return true;
+                pointer--;
+                updatePointer();
+                return true;
+            case DOWN:
+                if (pointer == getStockView().getStockViews().size() - 1)
+                    return true;
+                pointer++;
+                updatePointer();
+                return true;
+            case ENTER:
+                Stock selected = getSelectedStock();
+                if (selected == null)
+                    return false;
+
+                openActivity(
+                        StockActivity.class,
+                        new Bundle().addExtra("stock", selected),
+                        false);
+                return true;
+            case ESCAPE:
+                closeActivity();
+                return true;
+        }
+        return false;
+    }
+
+    private void updatePointer() {
+        int i = -1;
+        for (StockLineView stockView : getStockView().getStockViews()) {
+            i++;
+            stockView.getTickerStyle().setBackground(
+                    i == pointer ? Color.MAROON : Color.GRAY);
+        }
+        render();
+    }
+
+    protected Stock getSelectedStock() {
+        int i = -1;
+        for (StockLineView stockView : getStockView().getStockViews()) {
+            i++;
+            if (i == pointer)
+                return stockView.getStock();
+        }
+        return null;
+    }
+
+    @Override
+    protected void render() {
+        getCanvas().clear();
+
+        if (getCanvas().getHeight() == 0 || getCanvas().getWidth() == 0)
+            return;
+
+        int top = 0, down = Math.max(getCanvas().getHeight() - 2, 0);
+        int left = 0, right = Math.max(getCanvas().getWidth() - 1, 0);
+
+        for (int i = 0; i <= right; i++) {
+            getCanvas().getCell(top, i).setBackground(current.color);
+            getCanvas().getCell(down, i).setBackground(current.color);
+        }
+
+        for (int i = 0; i <= down; i++) {
+            getCanvas().getCell(i, left).setBackground(current.color);
+            getCanvas().getCell(i, right).setBackground(current.color);
+        }
+
+        super.render();
+    }
+
+    protected abstract StockView<? extends StockLineView> getStockView();
+
+}
Index: src/main/java/com/zeromb/gostock/display/view/line/LineView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/display/view/line/LineView.java b/src/main/java/com/zeromb/gostock/display/view/line/LineView.java
new file mode 100644
--- /dev/null	(date 1673013218641)
+++ b/src/main/java/com/zeromb/gostock/display/view/line/LineView.java	(date 1673013218641)
@@ -0,0 +1,104 @@
+package com.zeromb.gostock.display.view.line;
+
+import ru.congas.core.output.canvas.Canvas;
+import ru.congas.core.output.modifier.Style;
+import ru.congas.core.output.widgets.TextView;
+import ru.congas.core.output.widgets.Widget;
+
+import java.util.LinkedList;
+import java.util.List;
+
+/**
+ * @author Mr_Told
+ */
+public class LineView extends Widget {
+
+    Style style;
+    List<TextView> views = new LinkedList<>();
+    String separator = " ";
+
+    String finalString;
+    Style[] finalStyle;
+    boolean dirty = true;
+
+    public LineView(Style style) {
+        this.style = style;
+    }
+
+    public LineView addView(TextView view) {
+        views.add(view);
+        dirty = true;
+        return this;
+    }
+
+    public LineView removeView(TextView view) {
+        views.remove(view);
+        dirty = true;
+        return this;
+    }
+
+    public LineView clearViews() {
+        views.clear();
+        dirty = true;
+        return this;
+    }
+
+    public void markDirty() {
+        dirty = true;
+    }
+
+    private void calculate() {
+        if (!dirty) return;
+
+        StringBuilder sb = new StringBuilder();
+
+        for (TextView view : views)
+            sb.append(view.getText()).append(separator);
+
+        sb.setLength(sb.length() - 1);
+        finalString = sb.toString();
+
+        finalStyle = new Style[finalString.length()];
+
+        int i = 0;
+        for (TextView view : views) {
+            String s = view.getText();
+            Style style = view.getStyle();
+
+            for (int j = 0; j < s.length(); j++) {
+                finalStyle[i] = style;
+                i++;
+            }
+            i += separator.length();
+        }
+
+        dirty = false;
+    }
+
+    @Override
+    public void render(Canvas canvas) {
+        calculate();
+        int len = finalString.length();
+
+        int startX = pos().getXCoordinate(len, canvas.getWidth());
+        int contentX = pos().getContentX(len, canvas.getWidth());
+        int contentWidth = pos().getContentWidth(len, canvas.getWidth() - pos().getOffsetX());
+        int y = pos().getYCoordinate(1, canvas.getHeight());
+        int endX = pos().getEndXCoordinate(startX, len, canvas.getWidth());
+
+        int i;
+        for (i = startX; i < endX; ++i) {
+            canvas.getCell(y, i).setStyle(this.getBackground());
+        }
+
+        for (i = contentX; i < contentWidth + contentX; ++i) {
+            int p = i - contentX;
+            canvas.getCell(y, i).setChar(finalString.charAt(p)).setStyle(finalStyle[p]);
+        }
+    }
+
+    public void setSeparator(String separator) {
+        this.separator = separator;
+    }
+
+}
Index: src/main/java/com/zeromb/gostock/display/view/group/PortfolioView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/zeromb/gostock/display/view/group/PortfolioView.java b/src/main/java/com/zeromb/gostock/display/view/group/PortfolioView.java
new file mode 100644
--- /dev/null	(date 1673013218630)
+++ b/src/main/java/com/zeromb/gostock/display/view/group/PortfolioView.java	(date 1673013218630)
@@ -0,0 +1,41 @@
+package com.zeromb.gostock.display.view.group;
+
+import com.zeromb.gostock.display.view.line.CoinsLineView;
+import com.zeromb.gostock.display.view.line.stock.OwnedStockLineView;
+import com.zeromb.gostock.obj.Portfolio;
+import ru.congas.core.output.canvas.Canvas;
+
+/**
+ * @author Mr_Told
+ */
+public class PortfolioView extends StockView<OwnedStockLineView> {
+
+    CoinsLineView coinsView;
+
+    public PortfolioView(Portfolio portfolio) {
+        super(portfolio.getStocks(), OwnedStockLineView::new);
+
+        this.coinsView = new CoinsLineView(portfolio.getCoins());
+        update();
+    }
+
+    @Override
+    public void renderStocks(Canvas canvas, int offsetY) {
+        coinsView.pos().setOffset(pos().getOffsetX(), pos().getOffsetY() + offsetY);
+        coinsView.render(canvas);
+        super.renderStocks(canvas, offsetY + 2);
+    }
+
+    public void setDayDelta(boolean dayDelta) {
+        for (OwnedStockLineView view : stockViews)
+            view.setDayDelta(dayDelta);
+    }
+
+    public void update() {
+        coinsView.update();
+        coinsView.markDirty();
+
+        super.update();
+    }
+
+}
