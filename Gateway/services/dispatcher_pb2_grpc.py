# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import base_pb2 as base__pb2
import dispatcher_pb2 as dispatcher__pb2


class GatewayReceiverStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendOrderStatus = channel.unary_unary(
                '/dispatcher.GatewayReceiver/SendOrderStatus',
                request_serializer=dispatcher__pb2.OrderStatus.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )


class GatewayReceiverServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendOrderStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GatewayReceiverServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendOrderStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SendOrderStatus,
                    request_deserializer=dispatcher__pb2.OrderStatus.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dispatcher.GatewayReceiver', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GatewayReceiver(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendOrderStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dispatcher.GatewayReceiver/SendOrderStatus',
            dispatcher__pb2.OrderStatus.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class DispatcherGatewayStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCurrentPrice = channel.unary_unary(
                '/dispatcher.DispatcherGateway/GetCurrentPrice',
                request_serializer=base__pb2.ISIN.SerializeToString,
                response_deserializer=base__pb2.StockPrice.FromString,
                )
        self.GetOpeningPrice = channel.unary_unary(
                '/dispatcher.DispatcherGateway/GetOpeningPrice',
                request_serializer=base__pb2.ISIN.SerializeToString,
                response_deserializer=base__pb2.StockPrice.FromString,
                )
        self.PlaceOrder = channel.unary_unary(
                '/dispatcher.DispatcherGateway/PlaceOrder',
                request_serializer=base__pb2.Order.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )
        self.CancelOrder = channel.unary_unary(
                '/dispatcher.DispatcherGateway/CancelOrder',
                request_serializer=base__pb2.CancelOrderRequest.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )


class DispatcherGatewayServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCurrentPrice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOpeningPrice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlaceOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DispatcherGatewayServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCurrentPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentPrice,
                    request_deserializer=base__pb2.ISIN.FromString,
                    response_serializer=base__pb2.StockPrice.SerializeToString,
            ),
            'GetOpeningPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOpeningPrice,
                    request_deserializer=base__pb2.ISIN.FromString,
                    response_serializer=base__pb2.StockPrice.SerializeToString,
            ),
            'PlaceOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.PlaceOrder,
                    request_deserializer=base__pb2.Order.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
            'CancelOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelOrder,
                    request_deserializer=base__pb2.CancelOrderRequest.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dispatcher.DispatcherGateway', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DispatcherGateway(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCurrentPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dispatcher.DispatcherGateway/GetCurrentPrice',
            base__pb2.ISIN.SerializeToString,
            base__pb2.StockPrice.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOpeningPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dispatcher.DispatcherGateway/GetOpeningPrice',
            base__pb2.ISIN.SerializeToString,
            base__pb2.StockPrice.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PlaceOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dispatcher.DispatcherGateway/PlaceOrder',
            base__pb2.Order.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dispatcher.DispatcherGateway/CancelOrder',
            base__pb2.CancelOrderRequest.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
